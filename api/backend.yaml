openapi: 3.1.0
info:
  title: backend
  version: '0.2.0'
  summary: API for the Flask Server
  description: ''
servers:
  - url: 'http://localhost:3000'
  - url: 'https://quizzr.stoplight.io'
    description: a
paths:
  /answer:
    get:
      summary: Get Recorded Question
      tags: []
      responses:
        '200':
          description: Question Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/GFileID'
                  vtt:
                    $ref: '#/components/schemas/VTT'
                  qid:
                    $ref: '#/components/schemas/Str-ObjectId'
                required:
                  - id
                  - vtt
                  - qid
        '404':
          description: Question Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    err: rec_not_found
                properties:
                  err:
                    type: string
                    enum:
                      - rec_not_found
                required:
                  - err
      operationId: pick_game_question
      description: 'Retrieve an audio file ID and its associated VTT from a recorded question, along with the ID of the question.'
    parameters: []
  /answer/check:
    get:
      summary: Check an Answer
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  correct:
                    type: boolean
      operationId: check_answer
      parameters:
        - schema:
            type: string
          in: query
          name: a
          description: The answer to be checked
        - schema:
            type: string
          in: query
          name: qid
          description: The ID of the question selected
      description: Check if the user's answer approximately matches the stored answer of the associated question.
  /audio/processed:
    post:
      summary: Add Processed Audio Data
      tags: []
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  successes:
                    type: integer
                  total:
                    type: integer
                  errors:
                    $ref: '#/components/schemas/Errors'
                required:
                  - successes
                  - total
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMsg'
      operationId: handle_processing_results
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                arguments:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        $ref: '#/components/schemas/GFileID'
                      vtt:
                        $ref: '#/components/schemas/VTT'
                      score:
                        type: object
                        required:
                          - wer
                          - mer
                          - wil
                        properties:
                          wer:
                            type: number
                            description: Word Error Rate
                          mer:
                            type: number
                            description: Match Error Rate
                          wil:
                            type: number
                            description: Word Information Lost
                      batchNumber:
                        type: string
                      metadata:
                        type: string
                    required:
                      - _id
                      - vtt
                      - score
                      - batchNumber
                      - metadata
              required:
                - arguments
        description: A batch of results from processing audio files.
      description: Update a batch of audio files with results from processing them.
      parameters:
        - $ref: '#/components/parameters/Internal-Auth-Token'
  /audio/unprocessed:
    parameters: []
    get:
      summary: Get Unprocessed Audio Batch
      tags: []
      responses:
        '200':
          description: Document Batch Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    results:
                      - _id: 1l77laMyEVIit3_AP7v_YQBxe9RQvJ4zT
                        transcript: The quick brown fox jumps over the lazy dog.
                      - _id: 1IirF6ac4p-_A7zyXuDWYIzWpNUUjKbt1
                        transcript: Hello world.
                properties:
                  results:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        _id:
                          minLength: 1
                          type: string
                        transcript:
                          type: string
                          minLength: 1
                        diarMetadata:
                          type: string
                      required:
                        - _id
                        - transcript
                  errors:
                    $ref: '#/components/schemas/Errors'
                required:
                  - results
              examples:
                Sample Response:
                  value:
                    results:
                      - _id: 1kjgKmxnvj758JhgsjLjY3_-jck9xLbV1
                        transcript: The quick brown fox jumps over the lazy dog.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMsg'
      operationId: get_unprocessed_audio
      description: Retrieve a batch of unprocessed audio documents up to a limit specified by the `UNPROC_FIND_LIMIT` environment variable. Each audio document includes the ID of the audio document and the transcript (retrieved from the associated question document).
      parameters:
        - $ref: '#/components/parameters/Internal-Auth-Token'
  '/download/{gfile_id}':
    parameters:
      - $ref: '#/components/parameters/GFileID'
    get:
      summary: Get Recording
      tags: []
      responses:
        '200':
          description: Recording Found
          content:
            application/ogg:
              schema:
                type: object
                properties: {}
          headers: {}
        '404':
          description: Not Found
      operationId: retrieve_audio_file
      description: Retrieve an audio file from Google Drive.
  /record:
    get:
      summary: Get Question and Transcript
      tags: []
      responses:
        '200':
          description: Question Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          $ref: '#/components/schemas/Str-ObjectId'
                        transcript:
                          type: string
                      required:
                        - id
                        - transcript
                required:
                  - results
        '404':
          description: Question Not Found
      operationId: pick_recording_question
      description: Retrieve a question ID and its associated transcript
      parameters:
        - schema:
            type: integer
          in: query
          name: batchSize
          description: The number of questions to retrieve
        - schema:
            type: integer
            minimum: 0
            maximum: 2
          in: query
          name: difficultyType
          description: A difficulty type in enumerated form. Higher numbers are more difficult.
    parameters: []
  /upload:
    post:
      summary: Submit Recording
      tags: []
      responses:
        '202':
          description: Upload Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  prescreenSuccessful:
                    type: boolean
                required:
                  - prescreenSuccessful
              examples: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMsg'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    err: empty_uids
                properties:
                  err:
                    type: string
                    enum:
                      - empty_uids
                      - prescreen_error
                required:
                  - err
      operationId: pre_screen
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                audio:
                  $ref: '#/components/schemas/File'
                qid:
                  $ref: '#/components/schemas/Str-ObjectId'
                recType:
                  type: string
                  enum:
                    - normal
                    - buzz
                diarMetadata:
                  type: string
              required:
                - audio
                - recType
            examples:
              user-submission:
                value:
                  audio: {}
                  qid: 81d04b85a09490e12cde7bfc
                  recType: normal
              admin-submission:
                value:
                  audio: {}
                  qid: 81d04b85a09490e12cde7bfc
                  recType: normal
                  diarMetadata: 'detect_num_speakers=False, max_num_speakers=3'
              user-buzz-submission:
                value:
                  audio: {}
                  recType: buzz
        description: The file to upload along with some transaction information.
      description: Pre-screen the given audio file for how accurately it matches to the given question's transcript and upload it to the database if it is accurate enough.
  /upload/question:
    post:
      summary: Upload Question Batch
      tags: []
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMsg'
        '500':
          description: Internal Server Error
      operationId: upload_questions
      description: Upload a batch of unrecorded questions.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                arguments:
                  type: array
                  uniqueItems: true
                  items:
                    type: object
                    additionalProperties: false
                    properties:
                      transcript:
                        type: string
                      answer:
                        type: string
                      recDifficulty:
                        type: integer
                        description: 'A value returned from the bag-of-words-test (see https://github.com/UMD-Summer-2021-ASR/bag-of-words-test).'
                    required:
                      - transcript
                      - answer
                      - recDifficulty
              required:
                - arguments
            examples:
              example-1:
                value:
                  arguments:
                    - transcript: 'This man ordered Thomas Larkin to buy him seventy square miles of land, leading him to acquire his Mariposa gold mine. He married Jessie, the daughter of Thomas Hart Benton, and, during the Civil War, he controversially confiscated slaveholder property while acting as the leader of (*) Missouri. Kit Carson served as the guide for the first two of his expeditions to survey the American West. For 10 points, name this explorer known as "the Pathfinder" who was also the first presidential candidate of the Republican Party.'
                      answer: John C. Fremont
                      recDifficulty: 4
        description: A batch of unrecorded question documents.
      parameters:
        - $ref: '#/components/parameters/Internal-Auth-Token'
components:
  schemas:
    ObjectId:
      type: object
      title: ObjectId
      description: ObjectId from BSON
      minProperties: 1
      maxProperties: 1
      properties:
        $oid:
          type: string
          minLength: 24
          maxLength: 24
          pattern: '^[0-9a-f]+'
      required:
        - $oid
    Str-ObjectId:
      type: string
      title: Str-ObjectId
      minLength: 24
      maxLength: 24
      pattern: '^[0-9a-f]+'
      description: String representation of an ObjectId
    File:
      title: File
      type: object
      description: ''
    GFileID:
      type: string
      title: GFileID
      description: ID for a Google Drive File
      maxLength: 33
      minLength: 33
      pattern: '^1[A-Za-z0-9\-_]+'
    VTT:
      title: VTT
      type: string
      description: The contents of a VTT file
    ErrorMsg:
      title: Error
      type: string
      description: A machine-readable error message
    Errors:
      title: Errors
      type: array
      description: A list of error messages to send to the end user
      items:
        type: object
        properties:
          type:
            type: string
            enum:
              - bad_request
              - internal_error
          reason:
            type: string
        required:
          - type
          - reason
  parameters:
    GFileID:
      name: gfile_id
      in: path
      required: true
      schema:
        type: string
        pattern: '^1[A-Za-z0-9\-_]+'
        minLength: 33
        maxLength: 33
      description: The ID of a file in Google Drive
    Auth-Token:
      name: Authentication Token
      in: header
      required: true
      schema:
        type: string
      description: An authentication token to use for requests made by a user
    Internal-Auth-Token:
      name: Internal-Auth-Token
      in: header
      required: false
      schema:
        type: string
      description: An authentication token for requests between back-end components
  responses: {}
