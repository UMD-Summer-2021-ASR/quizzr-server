openapi: 3.1.0
info:
  title: Quizzr.io Data Flow Server
  version: 0.2.0
  summary: API for the Flask data flow server
  description: 'The Quizzr.io data flow server functions as the central piece of the back-end, handling requests for changing and getting data in common but specific manners. Examples include pre-screening audio recordings of question transcripts, selecting a question to answer or record, and enabling asynchronous processing of audio. It is written in the Flask framework for Python 3.8 and uses Firebase Storage to store audio files and the MongoDB Quizzr Atlas to store data. It is especially designed to work with the front-end portion of Quizzr.io. See the [browser-asr](https://github.com/UMD-Summer-2021-ASR/browser-asr) repository for more details on how to set it up with the back-end.'
  contact:
    name: Christopher Rapp
    email: christopher.michael.rapp@gmail.com
servers:
  - url: 'http://localhost:3000'
  - url: 'https://quizzr.stoplight.io'
    description: a
paths:
  /answer:
    get:
      summary: Check an Answer
      tags:
        - frontend
        - qb-pipeline
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  correct:
                    type: boolean
              examples: {}
      operationId: check_answer
      parameters:
        - schema:
            type: string
          in: query
          name: a
          description: The answer to be checked
        - schema:
            type: string
          in: query
          name: qid
          description: The ID of the question selected
        - $ref: '#/components/parameters/Auth-Token'
      description: Check if the user's answer approximately matches the stored answer of the associated question.
  /audio:
    get:
      summary: Get Unprocessed Audio Batch
      tags:
        - internal
        - rec-pipeline
      responses:
        '200':
          description: Document Batch Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    results:
                      - _id: 1l77laMyEVIit3_AP7v_YQBxe9RQvJ4zT
                        transcript: The quick brown fox jumps over the lazy dog.
                      - _id: 1IirF6ac4p-_A7zyXuDWYIzWpNUUjKbt1
                        transcript: Hello world.
                properties:
                  results:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        _id:
                          $ref: '#/components/schemas/Audio-Id'
                        transcript:
                          type: string
                          minLength: 1
                        diarMetadata:
                          type: string
                      required:
                        - _id
                        - transcript
                  errors:
                    $ref: '#/components/schemas/Errors'
                required:
                  - results
              examples:
                example-1:
                  value:
                    results:
                      - _id: sFHPiWfpRae5C2-5v7tCjAvZzPDB5sr4w6WODxCZilo
                        transcript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'
                      - _id: C0cb6nKK5nQ8I12T4O4590hnnOPMm_Lxf7D9r7ZTrD4
                        transcript: Justo donec enim diam vulputate ut pharetra sit amet. Risus feugiat in ante metus dictum at. Faucibus et molestie ac feugiat sed. Eu mi bibendum neque egestas congue quisque egestas diam in. Et tortor at risus viverra adipiscing at in tellus integer. Leo duis ut diam quam nulla porttitor massa id neque. Euismod in pellentesque massa placerat duis ultricies lacus sed turpis.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-Msg'
      operationId: get_unprocessed_audio
      description: Retrieve a batch of unprocessed audio documents up to a limit specified by the `UNPROC_FIND_LIMIT` environment variable. Each audio document includes the ID of the audio document and the transcript (retrieved from the associated question document).
      parameters: []
    patch:
      summary: Add Processed Audio Data
      tags:
        - internal
        - rec-pipeline
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  successes:
                    type: integer
                  total:
                    type: integer
                  errors:
                    $ref: '#/components/schemas/Errors'
                required:
                  - successes
                  - total
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-Msg'
      operationId: handle_processing_results
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                arguments:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        $ref: '#/components/schemas/Audio-Id'
                      vtt:
                        $ref: '#/components/schemas/VTT'
                      score:
                        type: object
                        required:
                          - wer
                          - mer
                          - wil
                        properties:
                          wer:
                            type: number
                            description: Word Error Rate
                          mer:
                            type: number
                            description: Match Error Rate
                          wil:
                            type: number
                            description: Word Information Lost
                      batchNumber:
                        type: string
                        format: date
                      metadata:
                        type: string
                    required:
                      - _id
                      - vtt
                      - score
                      - batchNumber
                      - metadata
              required:
                - arguments
            examples:
              example-1:
                value:
                  arguments:
                    - _id: aj1zL3A2Un3s23LJDA-tpeCnKQe0euXDsgWQVpzHjVg
                      vtt: |-
                        WEBVTT Kind: captions; Language: en

                        00:00:00.012345 --> 00:00:01.123456
                        <v Speaker 1>WORD1

                        00:00:01.123456 --> 00:00:02.123456
                        <v Speaker 1>WORD2

                        00:01:00.012345 --> 00:01:01.123456
                        <v Speaker 2>WORD3

                        00:01:01.123456 --> 00:01:02.123456
                        <v Speaker 2>WORD4
                      score:
                        wer: 1.124235
                        mer: 1
                        wil: 1
                      batchNumber: '2019-08-24'
                      metadata: 'detect_num_speakers=False, max_num_speakers=3'
        description: A batch of results from processing audio files.
      description: Update a batch of audio files with results from processing them.
      parameters: []
    post:
      summary: Submit Recording
      tags:
        - frontend
        - rec-pipeline
      responses:
        '202':
          description: Upload Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  prescreenSuccessful:
                    type: boolean
                required:
                  - prescreenSuccessful
              examples: {}
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-Msg'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    err: empty_uids
                properties:
                  err:
                    type: string
                    enum:
                      - empty_uids
                      - prescreen_error
                required:
                  - err
      operationId: pre_screen
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                audio:
                  type: string
                  format: binary
                qid:
                  $ref: '#/components/schemas/Str-ObjectId'
                recType:
                  type: string
                  enum:
                    - normal
                    - buzz
                diarMetadata:
                  type: string
              required:
                - audio
                - recType
            encoding:
              audio:
                contentType: audio/wav
            examples:
              user-submission:
                value:
                  audio: QBQuestionRec
                  qid: 81d04b85a09490e12cde7bfc
                  recType: normal
              admin-submission:
                value:
                  audio: DiarizationTest
                  qid: 81d04b85a09490e12cde7bfc
                  recType: normal
                  diarMetadata: 'detect_num_speakers=False, max_num_speakers=3'
              user-buzz-submission:
                value:
                  audio: BuzzRec
                  recType: buzz
        description: The file to upload along with some transaction information.
      description: Pre-screen the given audio file for how accurately it matches to the given question's transcript and upload it to the database if it is accurate enough.
  '/audio/{blob_path}':
    parameters:
      - $ref: '#/components/parameters/BlobPath'
    get:
      summary: Get Recording
      tags:
        - frontend
        - qb-pipeline
      responses:
        '200':
          description: Recording Found
          content:
            audio/wav:
              schema:
                type: string
                format: binary
              examples: {}
          headers: {}
        '404':
          description: Not Found
      operationId: retrieve_audio_file
      description: Retrieve an audio file from Firebase storage.
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
  /profile:
    get:
      summary: Get Private Profile
      tags:
        - frontend
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                new_user:
                  value:
                    _id: kaJ73KMV78tIj3a92xmn83ikjla1
                    pfp:
                      - 0
                    username: John Doe
                    usernameSpecs: ''
                    rating: 0
                    totalQuestionsPlayed: 0
                    totalGames: 0
                    coins: 0
                    coinsCumulative: 0
                    activityOverview: []
                    recordedAudios: []
                    permLevel: normal
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get_profile
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
      description: Retrieve all profile information associated with the user specified in the Auth-Token header. This is intended to be called by solely the front-end.
    post:
      summary: Create Profile
      operationId: create_profile
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '409':
          description: Username Taken
      description: Create a user profile stub as a client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pfp:
                  $ref: '#/components/schemas/PFP-Specs'
                username:
                  type: string
              required:
                - pfp
                - username
            examples:
              user-stub:
                value:
                  pfp:
                    - 0
                  username: John Doe
        description: The profile arguments. Extremely limited because this is executed anonymously.
      tags:
        - frontend
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
    patch:
      summary: Update Profile
      operationId: modify_profile
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update the user's profile as the user
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pfp:
                  $ref: '#/components/schemas/PFP-Specs'
                username:
                  type: string
                usernameSpecs:
                  $ref: '#/components/schemas/Username-Specs'
        description: The fields to update. Can include any of the properties listed below.
      tags:
        - frontend
    delete:
      summary: ''
      operationId: delete_profile
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: 'Delete the user''s profile as the user, along with all associated data.'
      tags:
        - frontend
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
  '/profile/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Get Public Profile
      tags:
        - frontend
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Public-Profile'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get_other_profile
      description: Retrieve the public profile of another user
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
    patch:
      summary: Change Profile
      tags:
        - frontend
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: modify_other_profile
      description: Modify the profile of another user. Can modify any field except `permLevel`. Requires elevated permissions.
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pfp:
                  $ref: '#/components/schemas/PFP-Specs'
                username:
                  type: string
                usernameSpecs:
                  $ref: '#/components/schemas/Username-Specs'
                rating:
                  type: integer
                totalQuestionsPlayed:
                  type: integer
                totalGames:
                  type: integer
                coins:
                  type: integer
                coinsCumulative:
                  type: integer
                activityOverview:
                  type: array
                  items:
                    $ref: '#/components/schemas/User-Action'
                recordedAudios:
                  type: array
                  items:
                    $ref: '#/components/schemas/Recording'
        description: The fields to update. Can include any of the properties listed below.
    delete:
      summary: Remove Profile
      tags:
        - frontend
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: delete_other_profile
      description: Deletes another user. Requires elevated permissions.
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
  /question:
    get:
      summary: Get Recorded Question
      tags:
        - qb-pipeline
        - frontend
      responses:
        '200':
          description: Question Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Audio-Id'
                  vtt:
                    $ref: '#/components/schemas/VTT'
                  qid:
                    $ref: '#/components/schemas/Str-ObjectId'
                required:
                  - id
                  - vtt
                  - qid
              examples:
                example-1:
                  value:
                    id: aj1zL3A2Un3s23LJDA-tpeCnKQe0euXDsgWQVpzHjVg
                    vtt: |-
                      WEBVTT Kind: captions; Language: en

                      00:00:00.012345 --> 00:00:01.123456
                      <v Speaker 1>WORD1

                      00:00:01.123456 --> 00:00:02.123456
                      <v Speaker 1>WORD2

                      00:01:00.012345 --> 00:01:01.123456
                      <v Speaker 2>WORD3

                      00:01:01.123456 --> 00:01:02.123456
                      <v Speaker 2>WORD4
                    qid: 9174ea6cb092348d950a2f65
        '404':
          description: Question Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    err: rec_not_found
                properties:
                  err:
                    type: string
                    enum:
                      - rec_not_found
                required:
                  - err
      operationId: pick_game_question
      description: 'Retrieve an audio file ID and its associated VTT from a recorded question, along with the ID of the question.'
      parameters:
        - $ref: '#/components/parameters/Auth-Token'
  /question/unrec:
    get:
      summary: Get Question and Transcript
      tags:
        - frontend
        - rec-pipeline
      responses:
        '200':
          description: Question Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          $ref: '#/components/schemas/Str-ObjectId'
                        transcript:
                          type: string
                      required:
                        - id
                        - transcript
                required:
                  - results
              examples:
                example-1:
                  value:
                    results:
                      - id: 9174ea6cb092348d950a2f65
                        transcript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ultrices sagittis orci a scelerisque purus. Vehicula ipsum a arcu cursus. Dis parturient montes nascetur ridiculus mus mauris vitae ultricies leo. In dictum non consectetur a erat nam at lectus. At augue eget arcu dictum. Bibendum neque egestas congue quisque egestas diam in arcu. Eget nullam non nisi est. Praesent elementum facilisis leo vel fringilla est ullamcorper. Aliquet risus feugiat in ante.'
        '404':
          description: Question Not Found
      operationId: pick_recording_question
      description: Retrieve a question ID and its associated transcript
      parameters:
        - schema:
            type: integer
          in: query
          name: batchSize
          description: The number of questions to retrieve
        - schema:
            type: integer
            minimum: 0
            maximum: 2
          in: query
          name: difficultyType
          description: A difficulty type in enumerated form. Higher numbers are more difficult.
        - $ref: '#/components/parameters/Auth-Token'
    post:
      summary: Upload Question Batch
      tags:
        - internal
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error-Msg'
        '500':
          description: Internal Server Error
      operationId: upload_questions
      description: Upload a batch of unrecorded questions.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                arguments:
                  type: array
                  uniqueItems: true
                  items:
                    type: object
                    additionalProperties: false
                    properties:
                      transcript:
                        type: string
                      answer:
                        type: string
                      recDifficulty:
                        type: integer
                        description: 'A value returned from the bag-of-words-test (see https://github.com/UMD-Summer-2021-ASR/bag-of-words-test).'
                    required:
                      - transcript
                      - answer
                      - recDifficulty
              required:
                - arguments
            examples:
              example-1:
                value:
                  arguments:
                    - transcript: 'This man ordered Thomas Larkin to buy him seventy square miles of land, leading him to acquire his Mariposa gold mine. He married Jessie, the daughter of Thomas Hart Benton, and, during the Civil War, he controversially confiscated slaveholder property while acting as the leader of (*) Missouri. Kit Carson served as the guide for the first two of his expeditions to survey the American West. For 10 points, name this explorer known as "the Pathfinder" who was also the first presidential candidate of the Republican Party.'
                      answer: John C. Fremont
                      recDifficulty: 4
        description: A batch of unrecorded question documents.
      parameters: []
components:
  schemas:
    Audio-Id:
      type: string
      title: Audio-Id
      description: The ID of an audio document
      examples:
        - aj1zL3A2Un3s23LJDA-tpeCnKQe0euXDsgWQVpzHjVg
      pattern: '^[A-Za-z0-9 -_]+'
      example: aj1zL3A2Un3s23LJDA-tpeCnKQe0euXDsgWQVpzHjVg
    Errors:
      title: Errors
      type: array
      description: A list of error messages to send to the end user (of the API)
      examples:
        - - type: bad_request
            reason: arg_foo_undefined
      items:
        type: object
        properties:
          type:
            type: string
            enum:
              - bad_request
              - internal_error
          reason:
            $ref: '#/components/schemas/Error-Msg'
        required:
          - type
          - reason
    Error-Msg:
      title: Error
      type: string
      description: A machine-readable error message
      examples:
        - unrec_invalid_qids
    Permission-Level:
      type: string
      title: Permission-Level
      enum:
        - normal
        - admin
      description: The permission level of a user
      examples:
        - normal
    PFP-Specs:
      title: PFP-Specs
      type: array
      description: Profile picture specifications
      items:
        type: integer
      examples:
        - - 0
    Public-Profile:
      title: Public-Profile
      type: object
      description: The public profile of a user
      properties:
        username:
          type: string
        usernameSpecs:
          $ref: '#/components/schemas/Username-Specs'
        pfp:
          $ref: '#/components/schemas/PFP-Specs'
        rating:
          type: integer
      examples:
        - username: John Doe
          usernameSpecs: string
          pfp:
            - 0
          rating: 0
    Recording:
      title: Recording
      type: object
      description: A recording submission as represented when embedded in a field.
      properties:
        id:
          $ref: '#/components/schemas/Audio-Id'
        recType:
          $ref: '#/components/schemas/Rec-Type'
      examples:
        - id: aj1zL3A2Un3s23LJDA-tpeCnKQe0euXDsgWQVpzHjVg
          recType: normal
    Rec-Type:
      type: string
      title: Rec-Type
      description: Recording type
      enum:
        - normal
        - buzz
      examples:
        - normal
    Str-ObjectId:
      type: string
      title: Str-ObjectId
      minLength: 24
      maxLength: 24
      pattern: '^[0-9a-f]+'
      description: String representation of an ObjectId
      examples:
        - 9174ea6cb092348d950a2f65
    User:
      title: User
      type: object
      description: 'The full profile of a user, including "private" information. This is a MongoDB document in the Users collection.'
      properties:
        _id:
          $ref: '#/components/schemas/User-Id'
        pfp:
          $ref: '#/components/schemas/PFP-Specs'
        username:
          type: string
        usernameSpecs:
          $ref: '#/components/schemas/Username-Specs'
        rating:
          type: integer
        totalQuestionsPlayed:
          type: integer
        totalGames:
          type: integer
        coins:
          type: integer
        coinsCumulative:
          type: integer
        activityOverview:
          type: array
          items:
            $ref: '#/components/schemas/User-Action'
        recordedAudios:
          type: array
          items:
            $ref: '#/components/schemas/Recording'
        permLevel:
          $ref: '#/components/schemas/Permission-Level'
      required:
        - _id
        - pfp
        - username
        - usernameSpecs
        - rating
        - totalQuestionsPlayed
        - totalGames
        - coins
        - coinsCumulative
        - activityOverview
        - recordedAudios
        - permLevel
      examples:
        - _id: kaJ73KMV78tIj3a92xmn83ikjla1
          pfp:
            - 0
          username: John Doe
          usernameSpecs: ''
          rating: 0
          totalQuestionsPlayed: 0
          totalGames: 0
          coins: 0
          coinsCumulative: 0
          activityOverview:
            - id: string
          recordedAudios:
            - id: aj1zL3A2Un3s23LJDA-tpeCnKQe0euXDsgWQVpzHjVg
              recType: normal
          permLevel: normal
    Username-Specs:
      title: Username-Specs
      type: string
      description: Username specifications
      examples: []
    User-Action:
      title: User-Action
      type: object
      properties:
        id:
          type: string
      description: Not defined yet
      examples: []
    User-Id:
      type: string
      title: User-Id
      description: Firebase User ID
      pattern: '^[A-Za-z0-9]{28}'
      examples:
        - kaJ73KMV78tIj3a92xmn83ikjla1
      minLength: 28
      maxLength: 28
    VTT:
      title: VTT
      type: string
      description: The contents of a VTT file
      examples:
        - |-
          WEBVTT Kind: captions; Language: en

          00:00:00.012345 --> 00:00:01.123456
          <v Speaker 1>WORD1

          00:00:01.123456 --> 00:00:02.123456
          <v Speaker 1>WORD2

          00:01:00.012345 --> 00:01:01.123456
          <v Speaker 2>WORD3

          00:01:01.123456 --> 00:01:02.123456
          <v Speaker 2>WORD4
  parameters:
    BlobPath:
      name: blob_path
      in: path
      required: true
      schema:
        type: string
        format: uri
      description: The path to a Firebase Cloud Storage object in the format `<recType>/<_id>`
      allowReserved: true
    Auth-Token:
      name: Auth-Token
      in: header
      schema:
        type: string
      description: A Firebase authentication token. Only required if the server is deployed with `Q_ENV` set to "production".
  responses: {}
tags:
  - name: frontend
  - name: internal
  - name: qb-pipeline
  - name: rec-pipeline
